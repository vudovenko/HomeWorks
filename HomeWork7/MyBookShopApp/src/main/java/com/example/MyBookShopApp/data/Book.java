package com.example.MyBookShopApp.data;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "books")
@ApiModel(description = "entity representing a book")
public class Book {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db automatically")
    @JsonProperty(value = "id", index = 1)
    private Integer id;

    @Column(name = "pub_date")
    @ApiModelProperty("date of book publication")
    private Date pubDate;

    @ManyToOne
    @JoinColumn(name = "author_id", referencedColumnName = "id")
    @JsonIgnore
    private Author author;

    @JsonGetter("authors")
    public String authorsFullName() {
        return author.toString();
    }

    @Column(name = "is_bestseller")
    @ApiModelProperty("if isBestseller = 1 so the book is considered to be bestseller and  if 0 the book is not a " +
            "bestseller")
    private Integer isBestseller;

    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;

    @ApiModelProperty("book title")
    @JsonProperty(value = "title", index = 2)
    private String title;

    @ApiModelProperty("image url")
    private String image;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookFile> bookFileList = new ArrayList<>();

    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;

    @Column(name = "price")
    @JsonProperty("price")
    @ApiModelProperty("book price without discount")
    private Integer priceOld;

    @Column(name = "discount")
    @JsonProperty("discount")
    @ApiModelProperty("discount value for book")
    private Double price;

    @JsonProperty
    public Integer discountPrice() {
        Integer discountedPrice = priceOld - Math.toIntExact(Math.round(price * priceOld));
        return discountedPrice;
    }

    @Column(name = "number_buys")
    @ApiModelProperty("the number of users who bought the book")
    @JsonIgnore
    private Integer numberBuys;

    @Column(name = "basket_quantity")
    @ApiModelProperty("the number of users who have the book in the basket")
    @JsonIgnore
    private Integer basketQuantity;

    @Column(name = "number_deferred")
    @ApiModelProperty("the number of users who have the book deferred")
    @JsonIgnore
    private Integer numberDeferred;

    public Date getPubDate() {
        return pubDate;
    }

    public void setPubDate(Date pubDate) {
        this.pubDate = pubDate;
    }

    public Integer getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(Integer isBestseller) {
        this.isBestseller = isBestseller;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Author getAuthor() {
        return author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Integer getPriceOld() {
        return priceOld;
    }

    public void setPriceOld(Integer priceOld) {
        this.priceOld = priceOld;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public Integer getNumberBuys() {
        return numberBuys;
    }

    public void setNumberBuys(Integer numberBuys) {
        this.numberBuys = numberBuys;
    }

    public Integer getBasketQuantity() {
        return basketQuantity;
    }

    public void setBasketQuantity(Integer basketQuantity) {
        this.basketQuantity = basketQuantity;
    }

    public Integer getNumberDeferred() {
        return numberDeferred;
    }

    public void setNumberDeferred(Integer numberDeferred) {
        this.numberDeferred = numberDeferred;
    }

    public List<BookFile> getBookFileList() {
        return bookFileList;
    }

    public void setBookFileList(List<BookFile> bookFileList) {
        this.bookFileList = bookFileList;
    }

    @Override
    public String toString() {
        return "Book{" +
                "id=" + id +
                ", author=" + author +
                ", title='" + title + '\'' +
                ", priceOld='" + priceOld + '\'' +
                ", price='" + price + '\'' +
                "}\n";
    }
}
